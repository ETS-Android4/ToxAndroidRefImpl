machine:
  timezone:
    Europe/Berlin
  java:
    version: oraclejdk8
  environment:
    MAKEFLAGS: "j4"
# --- Android build ---
    _toolchain_: "/home/ubuntu/c-toxcore/toolchains/"
    _s_: "/home/ubuntu/c-toxcore/src/"
    AND_PATH: "$_toolchain_/arm-linux-androideabi/bin:$PATH"
    AND_PKG_CONFIG_PATH: "$_toolchain_/arm-linux-androideabi/sysroot/usr/lib/pkgconfig"
    AND_CC: "$_toolchain_/arm-linux-androideabi/bin/arm-linux-androideabi-clang"
    AND_GCC: "$_toolchain_/arm-linux-androideabi/bin/arm-linux-androideabi-gcc"
    AND_CXX: "$_toolchain_/arm-linux-androideabi/bin/arm-linux-androideabi-clang++"
    AND_READELF: "$_toolchain_/arm-linux-androideabi/bin/arm-linux-androideabi-readelf"
# --- Android build ---

    # ---------------------------------------------------
    # c-toxcore v0.1.7 48c86e942d487a8856cbd25797b320bfb1879ddc
    # c-toxcore v0.1.6 895de7ef26e7617769f2271345e414545c2581f8
    # c-toxcore v0.1.5 995578f1038842288c1ff552fd796ab2377db6e1
    # c-toxcore v0.1.4 27a97a8280813ec05a5209811c40ab23203bb292
    # c-toxcore v0.1.3 fdb46f6cf216a866d29402ae991be9c43282dde6
    # c-toxcore v0.1.2 a096c71db867ac83fc3e01e0fbe98573d20f9286
    # ---------------------------------------------------

    # c-toxcore v0.1.7
    AND_CTOXCORE_VERSION: "48c86e942d487a8856cbd25797b320bfb1879ddc"

    _SDK_: /usr/local/android-sdk-linux/
    _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
    JAVA_OPTS: "-Xms512m -Xmx1024m"
    GRADLE_OPTS: '-Xmx512m -Dorg.gradle.jvmargs="-Xmx1700m -XX:+HeapDumpOnOutOfMemoryError -XX:MaxPermSize=1700m"'
    CLASS_P: com.zoffcc.applications.trifa
    START_INTENT_P: com.zoffcc.applications.trifa.MainActivity

    ZEMU_: "appemu23"
    EMU_: "appemu21"
    XEMU_: "appemu10"
    Zsdpath: "/sdcard"
    sdpath: "/storage/sdcard"
    Xsdpath: "/mnt/sdcard"

###### custom 2 ######
    GRADLE_HOME: ~/g/gradle-custom
    PATH: ~/g/gradle-custom/bin:$PATH
#
#   GRADLE_CUSTOM_VERSION -> [0, 1]
#   GRADLE_CUSTOM_VNUM -> what version?
#
    GRADLE_CUSTOM_VERSION: 0
    GRADLE_CUSTOM_VNUM: 3.1
    # ANDROID_DAILY_OVERRIDE: "d349fb0bfb70be0d783e6c79454a5ceb276095ed"
###### custom 2 ######

dependencies:
  pre:
  - sudo apt-get update
  - sudo apt-get install clang
  - sudo apt-get install build-essential libtool autotools-dev automake checkinstall check yasm
  - sudo apt-get install pkg-config

# ------------ network_test requires that "localhost" resolves to ::1 ------------
  - sudo bash -c "echo '::1             localhost ipv6-localhost ipv6-loopback' >> /etc/hosts" # ipv6 localhost entry
# ------------ network_test requires that "localhost" resolves to ::1 ------------

  - java -version ; exit 0
  - gcc --version ; exit 0
  - clang --version ; exit 0

  - mkdir -p /home/ubuntu/c-toxcore # workaround :-)


  - sudo apt-get install xdotool > /dev/null 2> /dev/null
  - sudo apt-get install telnet > /dev/null 2> /dev/null
  - sudo apt-get install x11-utils > /dev/null 2> /dev/null
  - sudo apt-get install xvkbd > /dev/null 2> /dev/null
  - sudo apt-get install qrencode > /dev/null 2> /dev/null
  - sudo apt-get install p7zip-full

  - echo y | android update sdk --no-ui --all --filter "tools"
  - android list sdk --all | grep -i tools
  - android list sdk --all --extended
  - echo y | android update sdk --no-ui --all --filter "tools"

  - echo y | android update sdk --no-ui --all --filter build-tools-23.0.3
  - echo y | android update sdk --no-ui --all --filter build-tools-24.0.2
  - echo y | android update sdk --no-ui --all --filter build-tools-24.0.3
  - echo y | android update sdk --no-ui --all --filter build-tools-25.0.2
  - echo y | android update sdk --no-ui --all --filter build-tools-25.0.3
  - echo y | android update sdk --no-ui --all --filter android-16 ; exit 0
  - echo y | android update sdk --no-ui --all --filter android-21
  - echo y | android update sdk --no-ui --all --filter android-23
  - echo y | android update sdk --no-ui --all --filter android-24
  - echo y | android update sdk --no-ui --all --filter android-25
  - echo y | android update sdk --no-ui --all --filter platform-tools

  - echo y | android update sdk --no-ui --all --filter extra-android-m2repository > /dev/null 2> /dev/null
  - echo y | android update sdk --no-ui --all --filter extra-google-m2repository > /dev/null 2> /dev/null
  - echo y | android update sdk --no-ui --all --filter extra-android-support > /dev/null 2> /dev/null

  - echo y | android update sdk --no-ui --all --filter platform-tools-preview > /dev/null 2> /dev/null
  - echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21
  - echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-23 > /dev/null 2> /dev/null
  - echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-addon-google_apis-google-23 > /dev/null 2> /dev/null
  - echo y | android update sdk --no-ui --all --filter addon-google_apis-google-23 > /dev/null 2> /dev/null

  - echo ${ANDROID_HOME} ; exit 0
  - ls -al "${ANDROID_HOME}/licenses" ; exit 0

  - mkdir -p "${ANDROID_HOME}/licenses" ;
    echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "${ANDROID_HOME}/licenses/android-sdk-license" ;
    echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "${ANDROID_HOME}/licenses/android-sdk-preview-license" ;
    echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "${ANDROID_HOME}/licenses/intel-android-extra-license"

  - gradle -v # display gradle version
  - if [ "$GRADLE_CUSTOM_VERSION""x" == "1x" ]; then cd ~ ; wget 'https://services.gradle.org/distributions/gradle-'"$GRADLE_CUSTOM_VNUM"'-bin.zip' ; fi
  - if [ "$GRADLE_CUSTOM_VERSION""x" == "1x" ]; then mkdir ~/g ; cd ~/g ; unzip ~/gradle-"$GRADLE_CUSTOM_VNUM"-bin.zip ; fi
  - if [ "$GRADLE_CUSTOM_VERSION""x" == "1x" ]; then cd ~/g ; mv -v ./gradle-"$GRADLE_CUSTOM_VNUM" ./gradle-custom ; fi
  - gradle -v # display gradle version

compile:
  override:

# --- Android build ---
  - echo 'export PATH="$AND_PATH";export PKG_CONFIG_PATH="$AND_PKG_CONFIG_PATH";export READELF="$AND_READELF";export GCC="$AND_GCC";export CC="$AND_CC";export CXX="$AND_CXX";export CPPFLAGS="";export LDFLAGS=""' > ~/pp
  - chmod u+x ~/pp
  - mkdir -p "$_s_"

  - rm -Rf /home/ubuntu/install_dest/ ; mkdir -p /home/ubuntu/install_dest/
  - mkdir -p $CIRCLE_ARTIFACTS/android/


  - . ~/pp;mkdir -p "$PKG_CONFIG_PATH"
  - . ~/pp;curl -s http://dl.google.com/android/repository/android-ndk-r13b-linux-x86_64.zip -o android-ndk-r13b-linux-x86_64.zip
  - . ~/pp;unzip android-ndk-r13b-linux-x86_64.zip
  - . ~/pp;mv -v /home/ubuntu/ToxAndroidRefImpl/android-ndk-r13b /home/ubuntu/android-ndk
  - . ~/pp;/home/ubuntu/android-ndk/build/tools/make_standalone_toolchain.py --arch arm --install-dir "$_toolchain_"/arm-linux-androideabi --api 12 --force   

  - . ~/pp;cd $_s_;git clone --depth=1 --branch=v1.3.0 https://github.com/yasm/yasm.git
  - . ~/pp;cd $_s_/yasm/;autoreconf -fi
  - . ~/pp;rm -Rf ~/build/
  - . ~/pp;mkdir -p ~/build/
  - . ~/pp;cd ~/build/;$_s_/yasm/configure --prefix="$_toolchain_"/arm-linux-androideabi/sysroot/usr --disable-shared --disable-soname-versions --host=arm-linux-androideabi --with-sysroot="$_toolchain_"/arm-linux-androideabi/sysroot
  - . ~/pp;cd ~/build/;make -j4
  - . ~/pp;cd ~/build/;make install


  - . ~/pp;cd $_s_;git clone --depth=1 --branch=v1.6.0 https://github.com/webmproject/libvpx.git
  - . ~/pp;rm -Rf ~/build/
  - . ~/pp;mkdir -p ~/build/
  - . ~/pp;cd ~/build/;$_s_/libvpx/configure --prefix="$_toolchain_"/arm-linux-androideabi/sysroot/usr --disable-examples --disable-unit-tests --sdk-path=/home/ubuntu/android-ndk --target=armv7-android-gcc
  - . ~/pp;cd ~/build/;make -j4
  - . ~/pp;cd ~/build/;make install
  - . ~/pp;cd ~/build/;make clean
  - rm -Rf /home/ubuntu/install_dest/ ; mkdir -p /home/ubuntu/install_dest/
  - . ~/pp;cd ~/build/;make DESTDIR=/home/ubuntu/install_dest/ install
  - cd /home/ubuntu/install_dest/ ; cd home/ubuntu/c-toxcore/toolchains/arm-linux-androideabi/sysroot/ ; zip -r $CIRCLE_ARTIFACTS/android/libvpx.zip *


  - . ~/pp;cd $_s_;git clone --depth=1 --branch=v1.1.3 https://github.com/xiph/opus.git
  - . ~/pp;cd $_s_/opus/;autoreconf -fi
  - . ~/pp;rm -Rf ~/build/
  - . ~/pp;mkdir -p ~/build/
  - . ~/pp;cd ~/build/;$_s_/opus/configure --prefix="$_toolchain_"/arm-linux-androideabi/sysroot/usr --disable-shared --disable-soname-versions --host=arm-linux-androideabi --with-sysroot="$_toolchain_"/arm-linux-androideabi/sysroot
  - . ~/pp;cd ~/build/;make -j4
  - . ~/pp;cd ~/build/;make install
  - . ~/pp;cd ~/build/;make clean
  - rm -Rf /home/ubuntu/install_dest/ ; mkdir -p /home/ubuntu/install_dest/
  - . ~/pp;cd ~/build/;make DESTDIR=/home/ubuntu/install_dest/ install
  - cd /home/ubuntu/install_dest/ ; cd home/ubuntu/c-toxcore/toolchains/arm-linux-androideabi/sysroot/ ; zip -r $CIRCLE_ARTIFACTS/android/opus.zip *
    
    
  - . ~/pp;cd $_s_;git clone --depth=1 --branch=1.0.11 https://github.com/jedisct1/libsodium.git
  - . ~/pp;cd $_s_/libsodium/;autoreconf -fi
  - . ~/pp;rm -Rf ~/build/
  - . ~/pp;mkdir -p ~/build/
  - . ~/pp;cd ~/build/;$_s_/libsodium/configure --prefix="$_toolchain_"/arm-linux-androideabi/sysroot/usr --disable-shared --disable-soname-versions --host=arm-linux-androideabi --with-sysroot="$_toolchain_"/arm-linux-androideabi/sysroot --enable-minimal --disable-pie
  - . ~/pp;cd ~/build/;make -j4
  - . ~/pp;cd ~/build/;make install
  - . ~/pp;cd ~/build/;make clean
  - rm -Rf /home/ubuntu/install_dest/ ; mkdir -p /home/ubuntu/install_dest/
  - . ~/pp;cd ~/build/;make DESTDIR=/home/ubuntu/install_dest/ install
  - cd /home/ubuntu/install_dest/ ; cd home/ubuntu/c-toxcore/toolchains/arm-linux-androideabi/sysroot/ ; zip -r $CIRCLE_ARTIFACTS/android/libsodium.zip *


  # --- get wanted c-toxcore version ---
  # ---- git does not clone into existing dir. why? --> so use workaround here ---
  - cd ~/ ; git clone https://github.com/TokTok/c-toxcore ~/tmp111
  - cd ~/ ; mv -v ~/tmp111/.??* c-toxcore/
  - cd ~/ ; mv -v ~/tmp111/* c-toxcore/
  - cd ~/ ; ls -al ~/tmp111/
  - cd ~/ ; rm -Rf ~/tmp111
  # ---- git does not clone into existing dir. why? --> so use workaround here ---
  - cd ~/c-toxcore/ ; git checkout "$AND_CTOXCORE_VERSION"
  - ls -al ~
  - ls -al ~/c-toxcore/
  # --- get wanted c-toxcore version ---

  - . ~/pp;cd ~/c-toxcore/;autoreconf -fi
  - . ~/pp;rm -Rf ~/build/
  - . ~/pp;mkdir -p ~/build/
  - . ~/pp;cd ~/build/;~/c-toxcore/configure CFLAGS="-O0 -g -funwind-tables -Wl,--no-merge-exidx-entries" --prefix="$_toolchain_"/arm-linux-androideabi/sysroot/usr --enable-logging --disable-soname-versions --host=arm-linux-androideabi --with-sysroot="$_toolchain_"/arm-linux-androideabi/sysroot --disable-testing --disable-rt
  - . ~/pp;cd ~/build/;export V=2;make -j4
  - . ~/pp;cd ~/build/;make install
  - . ~/pp;cd ~/build/;make clean
  - rm -Rf /home/ubuntu/install_dest/ ; mkdir -p /home/ubuntu/install_dest/
  - . ~/pp;cd ~/build/;make DESTDIR=/home/ubuntu/install_dest/ install
  - cd /home/ubuntu/install_dest/ ; cd home/ubuntu/c-toxcore/toolchains/arm-linux-androideabi/sysroot/ ; zip -r $CIRCLE_ARTIFACTS/android/c-toxcore.zip *


  - mkdir -p $CIRCLE_ARTIFACTS/android/libs/armeabi/
  - mkdir -p $CIRCLE_ARTIFACTS/android/libs/x86/

  - find / -name 'cpu-features*' 2>/dev/null ; exit 0
  - . ~/pp;cd jni-c-toxcore/; find .. -name 'cpu-features*' 2>/dev/null ; exit 0

  - . ~/pp;cd jni-c-toxcore/; export V=2;$GCC -O0 -g -shared -funwind-tables -Wl,--no-merge-exidx-entries -Wl,-soname,libjni-c-toxcore.so jni-c-toxcore.c -o libjni-c-toxcore.so -std=gnu99 -I/usr/local/include/ "$_toolchain_"/arm-linux-androideabi/sysroot/usr/lib/libtoxcore.a "$_toolchain_"/arm-linux-androideabi/sysroot/usr/lib/libtoxav.a "$_toolchain_"/arm-linux-androideabi/sysroot/usr/lib/libvpx.a "$_toolchain_"/arm-linux-androideabi/sysroot/usr/lib/libopus.a "$_toolchain_"/arm-linux-androideabi/sysroot/usr/lib/libsodium.a coffeecatch.c coffeejni.c -lm /home/ubuntu/android-ndk/sources/android/cpufeatures/cpu-features.c
  - . ~/pp;cd jni-c-toxcore/; ls -al
  #- . ~/pp;cd jni-c-toxcore/; $STRIP -d libjni-c-toxcore.so
  - . ~/pp;cd jni-c-toxcore/; $READELF -d libjni-c-toxcore.so
  - . ~/pp;cd jni-c-toxcore/; $READELF -a libjni-c-toxcore.so
  - . ~/pp;cd jni-c-toxcore/; $READELF -A libjni-c-toxcore.so
  - . ~/pp;cd jni-c-toxcore/; cp -av libjni-c-toxcore.so $CIRCLE_ARTIFACTS/android/libs/armeabi/

  - cd jni-c-toxcore/; mkdir -p ../android-refimpl-app/jnilib/src/main/jniLibs/armeabi-v7a/
  - cd jni-c-toxcore/; cp -av libjni-c-toxcore.so ../android-refimpl-app/jnilib/src/main/jniLibs/armeabi-v7a/
# --- Android build ---


# --------- GRADLE -------------
# - cd android-refimpl-app/ ; if [ "$GRADLE_CUSTOM_VERSION""x" == "1x" ]; then gradle wrapper --no-daemon --gradle-version "$GRADLE_CUSTOM_VNUM" --info ; else gradle wrapper --no-daemon --info ; fi ; exit 0
  - cd android-refimpl-app/ ; chmod a+rx ./gradlew
  - cd android-refimpl-app/ ; ./gradlew :jnilib:dependencies
  - cd android-refimpl-app/ ; ./gradlew :jnilib:build --max-workers=1 --stacktrace --no-daemon || ./gradlew :jnilib:build --stacktrace --no-daemon # first build may FAIL
  - cd android-refimpl-app/ ; ./gradlew :jnilib:install --info; exit 0
  - cd android-refimpl-app/ ; ./gradlew :jnilib:bintrayUpload --info; exit 0
  - find ~/.m2/repository -type f -exec ls -al {} \; ; exit 0
# --------- GRADLE -------------

# ----------- show generated aar file -----------
  - cd android-refimpl-app/ ; ls -al jnilib/build/outputs/aar/ ; exit 0
  - cd android-refimpl-app/ ; find ./ -name '*.aar' ; exit 0

  - unzip -t /home/ubuntu/.m2/repository/com/zoffcc/applications/trifajni/trifa-jni-lib/1.0.0/trifa-jni-lib-1.0.0.aar ; exit 0
  - cat /home/ubuntu/.m2/repository/com/zoffcc/applications/trifajni/trifa-jni-lib/1.0.0/trifa-jni-lib-1.0.0.pom ; exit 0
  - cat /home/ubuntu/.m2/repository/com/zoffcc/applications/trifajni/trifa-jni-lib/maven-metadata-local.xml ; exit 0

  - cd android-refimpl-app/ ; unzip -t ./jnilib/build/outputs/aar/trifa-jni-lib-release.aar ; exit 0
  - cd android-refimpl-app/ ; cp -av ./jnilib/build/outputs/aar/trifa-jni-lib-release.aar $CIRCLE_ARTIFACTS/
# ----------- show generated aar file -----------


  pre:
    - echo dummy
test:
  override:
    - echo dummy

# ----- CI artifact cleanup -----
    - mkdir -p $CIRCLE_ARTIFACTS/other/
    - mv -v $CIRCLE_ARTIFACTS/adb_out.txt $CIRCLE_ARTIFACTS/other/ ; exit 0
    - mv -v $CIRCLE_ARTIFACTS/stderr*.txt $CIRCLE_ARTIFACTS/other/ ; exit 0
    - mv -v $CIRCLE_ARTIFACTS/stdout*.txt $CIRCLE_ARTIFACTS/other/ ; exit 0
# ----- CI artifact cleanup -----


